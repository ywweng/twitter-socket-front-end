{"version":3,"sources":["webpack:///./src/components/UserTweetList.vue?9e71","webpack:///src/components/UserTweetList.vue","webpack:///./src/components/UserTweetList.vue?8c82","webpack:///./src/components/UserTweetList.vue?2036","webpack:///./src/components/UserTweetList.vue?bdce"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","_e","_l","tweet","key","id","attrs","name","params","userId","User","avatar","_v","_s","account","_f","createdAt","tweetId","description","on","$event","handleReplyModal","replyCount","isLike","stopPropagation","preventDefault","deleteLike","addLike","likeCount","tweetActive","afterReplySubmit","staticRenderFns","components","NewReplyModal","Spinner","mixins","props","type","required","data","userTweets","isLoading","created","fetchTweets","watch","newValue","methods","userAPI","console","tweetsAPI","response","Toast","icon","title","payload","allTweets","map","component"],"mappings":"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","file":"js/chunk-90fbd158.0464d4f8.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"tweet-list\"},[(_vm.isLoading)?_c('Spinner'):_vm._e(),_vm._l((_vm.userTweets),function(tweet){return _c('div',{key:tweet.id,staticClass:\"tweet-card d-flex\"},[_c('router-link',{attrs:{\"to\":{ name: 'user-profile', params: { userId: tweet.User.id } }}},[_c('img',{staticClass:\"avatar\",attrs:{\"src\":tweet.User.avatar,\"alt\":\"\"}})]),_c('div',{staticClass:\"tweet-info d-flex flex-column\"},[_c('div',{staticClass:\"first-line\"},[_c('span',{staticClass:\"text-name\"},[_vm._v(_vm._s(tweet.User.name))]),_c('span',{staticClass:\"text-account\"},[_vm._v(\"@\"+_vm._s(tweet.User.account)+\"．\"+_vm._s(_vm._f(\"fromNow\")(tweet.createdAt)))])]),_c('router-link',{attrs:{\"to\":{\n          name: 'single-tweet',\n          params: { tweetId: tweet.id, tweet: tweet },\n        }}},[_c('div',{staticClass:\"tweet-content\"},[_vm._v(\" \"+_vm._s(tweet.description)+\" \")])]),_c('div',{staticClass:\"action my-1\"},[_c('span',{staticClass:\"icon-wrap\"},[_c('button',{staticClass:\"btn-reply\",attrs:{\"data-bs-toggle\":\"modal\",\"data-bs-target\":\"#new-reply-modal\"},on:{\"click\":function($event){return _vm.handleReplyModal(tweet)}}},[_c('img',{staticClass:\"reply\",attrs:{\"src\":require(\"./../assets/icon_reply.png\"),\"alt\":\"\"}})]),_c('span',{staticClass:\"text-like-reply\"},[_vm._v(_vm._s(tweet.replyCount))])]),_c('span',{staticClass:\"icon-wrap ms-4\"},[(!tweet.isLike)?_c('img',{staticClass:\"like\",attrs:{\"src\":require(\"../assets/icon_like.png\"),\"alt\":\"\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.addLike(tweet.id)}}}):_c('img',{staticClass:\"like\",attrs:{\"src\":require(\"../assets/icon_like_fill.png\"),\"alt\":\"\"},on:{\"click\":function($event){$event.stopPropagation();$event.preventDefault();return _vm.deleteLike(tweet.id)}}}),_c('span',{staticClass:\"text-like-reply\"},[_vm._v(_vm._s(tweet.likeCount))])])])],1)],1)}),_c('NewReplyModal',{attrs:{\"tweet\":_vm.tweetActive},on:{\"after-reply-submit\":_vm.afterReplySubmit}})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"tweet-list\">\n    <Spinner v-if=\"isLoading\" />\n    <div class=\"tweet-card d-flex\" v-for=\"tweet in userTweets\" :key=\"tweet.id\">\n      <router-link\n        :to=\"{ name: 'user-profile', params: { userId: tweet.User.id } }\"\n      >\n        <img :src=\"tweet.User.avatar\" class=\"avatar\" alt=\"\" />\n      </router-link>\n      <div class=\"tweet-info d-flex flex-column\">\n        <div class=\"first-line\">\n          <span class=\"text-name\">{{ tweet.User.name }}</span>\n          <span class=\"text-account\"\n            >@{{ tweet.User.account }}．{{ tweet.createdAt | fromNow }}</span\n          >\n        </div>\n        <router-link\n          :to=\"{\n            name: 'single-tweet',\n            params: { tweetId: tweet.id, tweet },\n          }\"\n        >\n          <div class=\"tweet-content\">\n            {{ tweet.description }}\n          </div></router-link\n        >\n        <div class=\"action my-1\">\n          <span class=\"icon-wrap\">\n            <button\n              class=\"btn-reply\"\n              data-bs-toggle=\"modal\"\n              data-bs-target=\"#new-reply-modal\"\n              @click=\"handleReplyModal(tweet)\"\n            >\n              <img src=\"./../assets/icon_reply.png\" alt=\"\" class=\"reply\" />\n            </button>\n            <span class=\"text-like-reply\">{{ tweet.replyCount }}</span>\n          </span>\n          <span class=\"icon-wrap ms-4\">\n            <img\n              src=\"../assets/icon_like.png\"\n              class=\"like\"\n              alt=\"\"\n              v-if=\"!tweet.isLike\"\n              @click.stop.prevent=\"addLike(tweet.id)\"\n            />\n            <img\n              src=\"../assets/icon_like_fill.png\"\n              class=\"like\"\n              alt=\"\"\n              v-else\n              @click.stop.prevent=\"deleteLike(tweet.id)\"\n            />\n            <span class=\"text-like-reply\">{{ tweet.likeCount }}</span>\n          </span>\n        </div>\n      </div>\n    </div>\n    <NewReplyModal\n      :tweet=\"tweetActive\"\n      @after-reply-submit=\"afterReplySubmit\"\n    />\n  </div>\n</template>\n\n<script>\nimport NewReplyModal from \"./../components/NewReplyModal.vue\";\nimport userAPI from \"./../apis/user\";\nimport tweetsAPI from \"../apis/tweets\";\nimport Spinner from \"./../components/Spinner.vue\";\nimport { fromNowFilter } from \"../utils/mixins\";\nimport { Toast } from \"../utils/helpers\";\n\nexport default {\n  name: \"userTweetList\",\n  components: {\n    NewReplyModal,\n    Spinner,\n  },\n  mixins: [fromNowFilter],\n  props: {\n    userId: {\n      type: Number,\n      required: true,\n    },\n  },\n  data() {\n    return {\n      userTweets: [],\n      isLoading: true,\n      tweetActive: [],\n    };\n  },\n\n  created() {\n    const userId = this.userId;\n    this.fetchTweets(userId);\n  },\n  watch: {\n    userId(newValue) {\n      this.fetchTweets(newValue);\n    },\n  },\n  methods: {\n    async fetchTweets(userId) {\n      try {\n        const { data } = await userAPI.getUserTweets({ userId });\n        this.userTweets = data;\n        this.isLoading = false;\n      } catch (error) {\n        this.isLoading = false;\n        console.log(error.message);\n      }\n    },\n    async addLike(id) {\n      try {\n        const response = await tweetsAPI.addLike({ id });\n        if (response.data.status === \"error\") {\n          throw new Error();\n        }\n        this.userTweets = this.userTweets.map((tweet) => {\n          if (tweet.id === id) {\n            return {\n              ...tweet,\n              isLike: true,\n              likeCount: tweet.likeCount + 1,\n            };\n          }\n          console.log(tweet);\n          return tweet;\n        });\n      } catch (error) {\n        Toast.fire({\n          icon: \"error\",\n          title: error.response.data.message,\n        });\n      }\n    },\n    async deleteLike(id) {\n      try {\n        const response = await tweetsAPI.deleteLike({ id });\n        if (response.data.status === \"error\") {\n          throw new Error();\n        }\n\n        this.userTweets = this.userTweets.map((tweet) => {\n          if (+tweet.id === +id) {\n            return {\n              ...tweet,\n              isLike: false,\n              likeCount: tweet.likeCount - 1,\n            };\n          }\n          return tweet;\n        });\n      } catch (error) {\n        Toast.fire({\n          icon: \"error\",\n          title: error.response.data.message,\n        });\n      }\n    },\n    afterReplySubmit(payload) {\n      const { tweetId, replyCount } = payload;\n      this.allTweets = this.allTweets.map((tweet) => {\n        if (tweet.id !== tweetId) {\n          return tweet;\n        }\n        return {\n          ...tweet,\n          replyCount,\n        };\n      });\n    },\n    handleReplyModal(tweet) {\n      this.tweetActive = { ...tweet };\n    },\n  },\n};\n</script>\n\n<style scoped>\n.avatar {\n  width: 50px;\n  height: 50px;\n}\n.tweet-card {\n  padding: 10px 15px;\n  /* height: 145px; */\n  border-bottom: 1px solid #e6ecf0;\n}\n.tweet-card:hover {\n  /* cursor: pointer; */\n  box-shadow: 0 0 1px 0 var(--orange);\n}\n.tweet-content {\n  margin-top: 6px;\n  max-width: 510px;\n  font-size: 15px;\n  text-overflow: ellipsis;\n}\n.reply,\n.like {\n  width: 15px;\n  height: 15px;\n}\n.like:hover {\n  cursor: pointer;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserTweetList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserTweetList.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./UserTweetList.vue?vue&type=template&id=003d68e6&scoped=true&\"\nimport script from \"./UserTweetList.vue?vue&type=script&lang=js&\"\nexport * from \"./UserTweetList.vue?vue&type=script&lang=js&\"\nimport style0 from \"./UserTweetList.vue?vue&type=style&index=0&id=003d68e6&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"003d68e6\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./UserTweetList.vue?vue&type=style&index=0&id=003d68e6&scoped=true&lang=css&\""],"sourceRoot":""}